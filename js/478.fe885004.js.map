{"version":3,"file":"js/478.fe885004.js","mappings":"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","sources":["webpack://money-catcher/./src/views/RegisterView.vue?b167","webpack://money-catcher/./src/views/RegisterView.vue","webpack://money-catcher/./src/views/RegisterView.vue?1ec6"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-371b7484\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Зарегистрируйтесь\", -1))\nconst _hoisted_2 = { class: \"form-wrapper z-depth-2 white row\" }\nconst _hoisted_3 = [\"onSubmit\"]\nconst _hoisted_4 = { class: \"row\" }\nconst _hoisted_5 = { class: \"input-field col s12\" }\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"email\" }, \"Адрес электронной почты\", -1))\nconst _hoisted_7 = {\n  key: 0,\n  class: \"helper-text red-text\"\n}\nconst _hoisted_8 = {\n  key: 1,\n  class: \"helper-text red-text\"\n}\nconst _hoisted_9 = { class: \"row\" }\nconst _hoisted_10 = { class: \"input-field col s6\" }\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"first_name\" }, \"Ваше имя\", -1))\nconst _hoisted_12 = {\n  key: 0,\n  class: \"helper-text red-text\"\n}\nconst _hoisted_13 = {\n  key: 1,\n  class: \"helper-text red-text\"\n}\nconst _hoisted_14 = { class: \"input-field col s6\" }\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"last_name\" }, \"Ваша фамилия\", -1))\nconst _hoisted_16 = {\n  key: 0,\n  class: \"helper-text red-text\"\n}\nconst _hoisted_17 = {\n  key: 1,\n  class: \"helper-text red-text\"\n}\nconst _hoisted_18 = { class: \"row\" }\nconst _hoisted_19 = { class: \"input-field col s12\" }\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"password\" }, \"Пароль\", -1))\nconst _hoisted_21 = {\n  key: 0,\n  class: \"helper-text red-text\"\n}\nconst _hoisted_22 = {\n  key: 1,\n  class: \"helper-text red-text\"\n}\nconst _hoisted_23 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn col s12 m6 offset-m3 light-green darken-4\",\n  name: \"action\",\n  type: \"submit\"\n}, [\n  /*#__PURE__*/_createTextVNode(\"Зарегистрироваться \"),\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"material-icons right\" }, \"forward\")\n], -1))\nconst _hoisted_24 = { class: \"row\" }\nconst _hoisted_25 = { class: \"col s12 offset-m3 m6 center-align\" }\n\nimport { computed, reactive, ref } from 'vue';\r\nimport { useVuelidate } from '@vuelidate/core';\r\nimport { required, email, minLength, helpers } from '@vuelidate/validators';\r\nimport { useAuthStore } from '@/stores/auth';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'RegisterView',\n  setup(__props) {\n\r\nconst { register } = useAuthStore();\r\n\r\n// validations setup\r\nconst nameMinLength = ref(2);\r\nconst passwordMinLength = ref(6);\r\nconst state = reactive({\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  password: ''\r\n});\r\nconst rules = {\r\n  firstName: {\r\n    required: helpers.withMessage(\r\n      'Поле ИМЯ является обязательным.',\r\n      required\r\n    ),\r\n    minLength: helpers.withMessage(\r\n      ({ $params }) =>\r\n        `Длина Вашего имени должна быть не менее, чем ${ $params.min } символа.`,\r\n      minLength(nameMinLength)\r\n    )\r\n  },\r\n  lastName: {\r\n    required: helpers.withMessage(\r\n      'Поле ФАМИЛИЯ является обязательным.',\r\n      required\r\n    ),\r\n    minLength: helpers.withMessage(\r\n      ({ $params }) =>\r\n        `Длина Вашей фамилии должна быть не менее, чем ${ $params.min } символа.`,\r\n      minLength(nameMinLength)\r\n    )\r\n  },\r\n  email: {\r\n    required: helpers.withMessage('Поле EMAIL является обязательным.', required),\r\n    email: helpers.withMessage('Это не похоже на EMAIL...', email)\r\n  },\r\n  password: {\r\n    required: helpers.withMessage('Поле PASSWORD является обязательным.', required),\r\n    minLength: helpers.withMessage(({ $params }) =>\r\n        `Длина Вашего пароля должна быть не менее, чем ${ $params.min } символов.`,\r\n      minLength(passwordMinLength)\r\n    )\r\n  }\r\n};\r\nconst v$ = useVuelidate(rules, state);\r\nconst isEmailRequiredInvalid = computed(() => {\r\n  return v$.value.email.$dirty && v$.value.email.required.$invalid;\r\n});\r\nconst isEmailValueInvalid = computed(() => {\r\n  return v$.value.email.$dirty && v$.value.email.email.$invalid;\r\n});\r\nconst isPasswordRequiredInvalid = computed(() => {\r\n  return v$.value.password.$dirty && v$.value.password.required.$invalid;\r\n});\r\nconst isPasswordMinLengthInvalid = computed(() => {\r\n  return v$.value.password.$dirty && v$.value.password.minLength.$invalid;\r\n});\r\nconst isFirstNameRequiredInvalid = computed(() => {\r\n  return v$.value.firstName.$dirty && v$.value.firstName.required.$invalid;\r\n});\r\nconst isFirstNameMinLengthInvalid = computed(() => {\r\n  return v$.value.firstName.$dirty && v$.value.firstName.minLength.$invalid;\r\n});\r\nconst isLastNameRequiredInvalid = computed(() => {\r\n  return v$.value.lastName.$dirty && v$.value.lastName.required.$invalid;\r\n});\r\nconst isLastNameMinLengthInvalid = computed(() => {\r\n  return v$.value.lastName.$dirty && v$.value.lastName.minLength.$invalid;\r\n});\r\n\r\nconst submitForm = async () => {\r\n  if (v$.value.$invalid) {\r\n    v$.value.$touch();\r\n    return;\r\n  }\r\n\r\n  interface FormData {\r\n    firstName: string,\r\n    lastName: string,\r\n    email: string,\r\n    password: string\r\n  }\r\n\r\n  const formData: FormData = {\r\n    firstName: state.firstName,\r\n    lastName: state.lastName,\r\n    email: state.email,\r\n    password: state.password\r\n  };\r\n\r\n  await register(formData);\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"form\", {\n        class: \"col s12\",\n        onSubmit: _withModifiers(submitForm, [\"prevent\"])\n      }, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _withDirectives(_createElementVNode(\"input\", {\n              id: \"email\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((state.email) = $event)),\n              class: _normalizeClass({ invalid: isEmailRequiredInvalid.value || isEmailValueInvalid.value }),\n              type: \"email\"\n            }, null, 2), [\n              [\n                _vModelText,\n                state.email,\n                void 0,\n                { trim: true }\n              ]\n            ]),\n            _hoisted_6,\n            (isEmailRequiredInvalid.value)\n              ? (_openBlock(), _createElementBlock(\"small\", _hoisted_7, _toDisplayString(_unref(v$).email.required.$message), 1))\n              : (isEmailValueInvalid.value)\n                ? (_openBlock(), _createElementBlock(\"small\", _hoisted_8, _toDisplayString(_unref(v$).email.email.$message), 1))\n                : _createCommentVNode(\"\", true)\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_9, [\n          _createElementVNode(\"div\", _hoisted_10, [\n            _withDirectives(_createElementVNode(\"input\", {\n              id: \"first_name\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((state.firstName) = $event)),\n              class: _normalizeClass({ invalid: isFirstNameRequiredInvalid.value || isFirstNameMinLengthInvalid.value }),\n              type: \"text\"\n            }, null, 2), [\n              [\n                _vModelText,\n                state.firstName,\n                void 0,\n                { trim: true }\n              ]\n            ]),\n            _hoisted_11,\n            (isFirstNameRequiredInvalid.value)\n              ? (_openBlock(), _createElementBlock(\"small\", _hoisted_12, _toDisplayString(_unref(v$).firstName.required.$message), 1))\n              : (isFirstNameMinLengthInvalid.value)\n                ? (_openBlock(), _createElementBlock(\"small\", _hoisted_13, _toDisplayString(_unref(v$).firstName.minLength.$message), 1))\n                : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"div\", _hoisted_14, [\n            _withDirectives(_createElementVNode(\"input\", {\n              id: \"last_name\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((state.lastName) = $event)),\n              class: _normalizeClass({ invalid: isLastNameRequiredInvalid.value || isLastNameMinLengthInvalid.value }),\n              type: \"text\"\n            }, null, 2), [\n              [\n                _vModelText,\n                state.lastName,\n                void 0,\n                { trim: true }\n              ]\n            ]),\n            _hoisted_15,\n            (isLastNameRequiredInvalid.value)\n              ? (_openBlock(), _createElementBlock(\"small\", _hoisted_16, _toDisplayString(_unref(v$).lastName.required.$message), 1))\n              : (isLastNameMinLengthInvalid.value)\n                ? (_openBlock(), _createElementBlock(\"small\", _hoisted_17, _toDisplayString(_unref(v$).lastName.minLength.$message), 1))\n                : _createCommentVNode(\"\", true)\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_18, [\n          _createElementVNode(\"div\", _hoisted_19, [\n            _withDirectives(_createElementVNode(\"input\", {\n              id: \"password\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((state.password) = $event)),\n              class: _normalizeClass({ invalid: isPasswordRequiredInvalid.value || isPasswordMinLengthInvalid.value }),\n              autocomplete: \"true\",\n              type: \"password\"\n            }, null, 2), [\n              [\n                _vModelText,\n                state.password,\n                void 0,\n                { trim: true }\n              ]\n            ]),\n            _hoisted_20,\n            (isPasswordRequiredInvalid.value)\n              ? (_openBlock(), _createElementBlock(\"small\", _hoisted_21, _toDisplayString(_unref(v$).password.required.$message), 1))\n              : (isPasswordMinLengthInvalid.value)\n                ? (_openBlock(), _createElementBlock(\"small\", _hoisted_22, _toDisplayString(_unref(v$).password.minLength.$message), 1))\n                : _createCommentVNode(\"\", true)\n          ])\n        ]),\n        _hoisted_23,\n        _createElementVNode(\"div\", _hoisted_24, [\n          _createElementVNode(\"div\", _hoisted_25, [\n            _createElementVNode(\"p\", null, [\n              _createTextVNode(\"Уже есть учетная запись? \"),\n              _createVNode(_component_router_link, { to: \"/login\" }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Войти\")\n                ]),\n                _: 1\n              })\n            ])\n          ])\n        ])\n      ], 40, _hoisted_3)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <h3>Зарегистрируйтесь</h3>\r\n  <div class=\"form-wrapper z-depth-2 white row\">\r\n    <form class=\"col s12\" @submit.prevent=\"submitForm\">\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input id=\"email\"\r\n                 v-model.trim=\"state.email\"\r\n                 :class=\"{ invalid: isEmailRequiredInvalid || isEmailValueInvalid }\"\r\n                 type=\"email\">\r\n          <label for=\"email\">Адрес электронной почты</label>\r\n          <!--suppress TypeScriptUnresolvedReference, JSUnresolvedReference -->\r\n          <small\r\n            v-if=\"isEmailRequiredInvalid\"\r\n            class=\"helper-text red-text\"\r\n          >{{ v$.email.required.$message }}</small>\r\n          <!--suppress TypeScriptUnresolvedReference, JSUnresolvedReference -->\r\n          <small\r\n            v-else-if=\"isEmailValueInvalid\"\r\n            class=\"helper-text red-text\"\r\n          >{{ v$.email.email.$message }}</small>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s6\">\r\n          <input\r\n            id=\"first_name\"\r\n            v-model.trim=\"state.firstName\"\r\n            :class=\"{ invalid: isFirstNameRequiredInvalid || isFirstNameMinLengthInvalid }\"\r\n            type=\"text\"\r\n          >\r\n          <label for=\"first_name\">Ваше имя</label>\r\n          <!--suppress TypeScriptUnresolvedReference, JSUnresolvedReference -->\r\n          <small\r\n            v-if=\"isFirstNameRequiredInvalid\"\r\n            class=\"helper-text red-text\"\r\n          >{{ v$.firstName.required.$message }}</small>\r\n          <!--suppress TypeScriptUnresolvedReference, JSUnresolvedReference -->\r\n          <small\r\n            v-else-if=\"isFirstNameMinLengthInvalid\"\r\n            class=\"helper-text red-text\"\r\n          >{{ v$.firstName.minLength.$message }}</small>\r\n        </div>\r\n        <div class=\"input-field col s6\">\r\n          <input\r\n            id=\"last_name\"\r\n            v-model.trim=\"state.lastName\"\r\n            :class=\"{ invalid: isLastNameRequiredInvalid || isLastNameMinLengthInvalid }\"\r\n            type=\"text\"\r\n          >\r\n          <label for=\"last_name\">Ваша фамилия</label>\r\n          <!--suppress TypeScriptUnresolvedReference, JSUnresolvedReference -->\r\n          <small\r\n            v-if=\"isLastNameRequiredInvalid\"\r\n            class=\"helper-text red-text\"\r\n          >{{ v$.lastName.required.$message }}</small>\r\n          <!--suppress TypeScriptUnresolvedReference, JSUnresolvedReference -->\r\n          <small\r\n            v-else-if=\"isLastNameMinLengthInvalid\"\r\n            class=\"helper-text red-text\"\r\n          >{{ v$.lastName.minLength.$message }}</small>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input\r\n            id=\"password\"\r\n            v-model.trim=\"state.password\"\r\n            :class=\"{ invalid: isPasswordRequiredInvalid || isPasswordMinLengthInvalid }\" autocomplete=\"true\"\r\n            type=\"password\">\r\n          <label for=\"password\">Пароль</label>\r\n          <!--suppress TypeScriptUnresolvedReference, JSUnresolvedReference -->\r\n          <small\r\n            v-if=\"isPasswordRequiredInvalid\"\r\n            class=\"helper-text red-text\"\r\n          >{{ v$.password.required.$message }}</small>\r\n          <!--suppress TypeScriptUnresolvedReference, JSUnresolvedReference -->\r\n          <small\r\n            v-else-if=\"isPasswordMinLengthInvalid\"\r\n            class=\"helper-text red-text\"\r\n          >{{ v$.password.minLength.$message }}</small>\r\n        </div>\r\n      </div>\r\n      <button class=\"btn col s12 m6 offset-m3 light-green darken-4\" name=\"action\" type=\"submit\">Зарегистрироваться\r\n        <i class=\"material-icons right\">forward</i>\r\n      </button>\r\n      <div class=\"row\">\r\n        <div class=\"col s12 offset-m3 m6 center-align\">\r\n          <p>Уже есть учетная запись?\r\n            <router-link to=\"/login\">Войти</router-link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { computed, reactive, ref } from 'vue';\r\nimport { useVuelidate } from '@vuelidate/core';\r\nimport { required, email, minLength, helpers } from '@vuelidate/validators';\r\nimport { useAuthStore } from '@/stores/auth';\r\n\r\nconst { register } = useAuthStore();\r\n\r\n// validations setup\r\nconst nameMinLength = ref(2);\r\nconst passwordMinLength = ref(6);\r\nconst state = reactive({\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  password: ''\r\n});\r\nconst rules = {\r\n  firstName: {\r\n    required: helpers.withMessage(\r\n      'Поле ИМЯ является обязательным.',\r\n      required\r\n    ),\r\n    minLength: helpers.withMessage(\r\n      ({ $params }) =>\r\n        `Длина Вашего имени должна быть не менее, чем ${ $params.min } символа.`,\r\n      minLength(nameMinLength)\r\n    )\r\n  },\r\n  lastName: {\r\n    required: helpers.withMessage(\r\n      'Поле ФАМИЛИЯ является обязательным.',\r\n      required\r\n    ),\r\n    minLength: helpers.withMessage(\r\n      ({ $params }) =>\r\n        `Длина Вашей фамилии должна быть не менее, чем ${ $params.min } символа.`,\r\n      minLength(nameMinLength)\r\n    )\r\n  },\r\n  email: {\r\n    required: helpers.withMessage('Поле EMAIL является обязательным.', required),\r\n    email: helpers.withMessage('Это не похоже на EMAIL...', email)\r\n  },\r\n  password: {\r\n    required: helpers.withMessage('Поле PASSWORD является обязательным.', required),\r\n    minLength: helpers.withMessage(({ $params }) =>\r\n        `Длина Вашего пароля должна быть не менее, чем ${ $params.min } символов.`,\r\n      minLength(passwordMinLength)\r\n    )\r\n  }\r\n};\r\nconst v$ = useVuelidate(rules, state);\r\nconst isEmailRequiredInvalid = computed(() => {\r\n  return v$.value.email.$dirty && v$.value.email.required.$invalid;\r\n});\r\nconst isEmailValueInvalid = computed(() => {\r\n  return v$.value.email.$dirty && v$.value.email.email.$invalid;\r\n});\r\nconst isPasswordRequiredInvalid = computed(() => {\r\n  return v$.value.password.$dirty && v$.value.password.required.$invalid;\r\n});\r\nconst isPasswordMinLengthInvalid = computed(() => {\r\n  return v$.value.password.$dirty && v$.value.password.minLength.$invalid;\r\n});\r\nconst isFirstNameRequiredInvalid = computed(() => {\r\n  return v$.value.firstName.$dirty && v$.value.firstName.required.$invalid;\r\n});\r\nconst isFirstNameMinLengthInvalid = computed(() => {\r\n  return v$.value.firstName.$dirty && v$.value.firstName.minLength.$invalid;\r\n});\r\nconst isLastNameRequiredInvalid = computed(() => {\r\n  return v$.value.lastName.$dirty && v$.value.lastName.required.$invalid;\r\n});\r\nconst isLastNameMinLengthInvalid = computed(() => {\r\n  return v$.value.lastName.$dirty && v$.value.lastName.minLength.$invalid;\r\n});\r\n\r\nconst submitForm = async () => {\r\n  if (v$.value.$invalid) {\r\n    v$.value.$touch();\r\n    return;\r\n  }\r\n\r\n  interface FormData {\r\n    firstName: string,\r\n    lastName: string,\r\n    email: string,\r\n    password: string\r\n  }\r\n\r\n  const formData: FormData = {\r\n    firstName: state.firstName,\r\n    lastName: state.lastName,\r\n    email: state.email,\r\n    password: state.password\r\n  };\r\n\r\n  await register(formData);\r\n};\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.form-overlay {\r\n  height: calc(100vh - 64px);\r\n  padding-top: 100px;\r\n}\r\n\r\n.form-wrapper {\r\n  max-width: 1000px;\r\n  border-radius: 16px;\r\n  padding: 32px;\r\n}\r\n</style>","import script from \"./RegisterView.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./RegisterView.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./RegisterView.vue?vue&type=style&index=0&id=371b7484&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-371b7484\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","_createElementVNode","_hoisted_2","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","for","_hoisted_7","key","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","name","type","_createTextVNode","_hoisted_24","_hoisted_25","_defineComponent","__name","setup","__props","register","useAuthStore","nameMinLength","ref","passwordMinLength","state","reactive","firstName","lastName","email","password","rules","required","helpers","withMessage","minLength","$params","min","v$","useVuelidate","isEmailRequiredInvalid","computed","value","$dirty","$invalid","isEmailValueInvalid","isPasswordRequiredInvalid","isPasswordMinLengthInvalid","isFirstNameRequiredInvalid","isFirstNameMinLengthInvalid","isLastNameRequiredInvalid","isLastNameMinLengthInvalid","submitForm","async","$touch","formData","_ctx","_cache","_component_router_link","_resolveComponent","_openBlock","_createElementBlock","_Fragment","onSubmit","_withModifiers","_withDirectives","id","$event","_normalizeClass","invalid","_vModelText","trim","_toDisplayString","_unref","$message","_createCommentVNode","autocomplete","_createVNode","to","default","_withCtx","_","__exports__"],"sourceRoot":""}