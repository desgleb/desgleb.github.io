{"version":3,"file":"js/823.c18f4d02.js","mappings":"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","sources":["webpack://money-catcher/./src/components/MonthSelectComponent.vue?d0d8","webpack://money-catcher/./src/components/MonthSelectComponent.vue","webpack://money-catcher/./src/components/MonthSelectComponent.vue?e854","webpack://money-catcher/./src/components/YearSelectComponent.vue?ca55","webpack://money-catcher/./src/components/YearSelectComponent.vue","webpack://money-catcher/./src/components/YearSelectComponent.vue?1c0b","webpack://money-catcher/./src/components/CalendarDayCardComponent.vue?03a3","webpack://money-catcher/./src/components/CalendarDayCardComponent.vue","webpack://money-catcher/./src/components/CalendarDayCardComponent.vue?7a92","webpack://money-catcher/./src/components/CalendarGridComponent.vue?9817","webpack://money-catcher/./src/components/CalendarGridComponent.vue","webpack://money-catcher/./src/components/CalendarGridComponent.vue?d8e0","webpack://money-catcher/./src/views/CalendarView.vue?ce2d","webpack://money-catcher/./src/views/CalendarView.vue"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, isRef as _isRef, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { class: \"input-field\" }\nconst _hoisted_2 = {\n  key: 0,\n  selected: \"\",\n  value: \"12\"\n}\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Фильтрация по месяцам\", -1)\n\nimport { onMounted, ref } from 'vue';\r\nimport { useTransactionsStore } from '@/stores/transactions';\r\nimport { storeToRefs } from 'pinia';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'MonthSelectComponent',\n  props: {\n    showAll: { type: Boolean }\n  },\n  setup(__props: any) {\n\r\n\r\n\r\nconst { transactionsMonthFilter } = storeToRefs(useTransactionsStore());\r\n\r\nconst monthSelect = ref();\r\nconst monthSelectInstance = ref();\r\n\r\nconst monthsArray: string[] = [ 'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь' ];\r\n\r\nonMounted(() => {\r\n  monthSelectInstance.value = M.FormSelect.init(monthSelect.value);\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _withDirectives(_createElementVNode(\"select\", {\n      ref_key: \"monthSelect\",\n      ref: monthSelect,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(transactionsMonthFilter) ? (transactionsMonthFilter).value = $event : null))\n    }, [\n      (_ctx.$props.showAll)\n        ? (_openBlock(), _createElementBlock(\"option\", _hoisted_2, \"Показать всё\"))\n        : _createCommentVNode(\"\", true),\n      (_openBlock(), _createElementBlock(_Fragment, null, _renderList(monthsArray, (month, index) => {\n        return _createElementVNode(\"option\", {\n          key: index,\n          value: index\n        }, _toDisplayString(month), 9, _hoisted_3)\n      }), 64))\n    ], 512), [\n      [\n        _vModelSelect,\n        _unref(transactionsMonthFilter),\n        void 0,\n        { number: true }\n      ]\n    ]),\n    _hoisted_4\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"input-field\">\r\n    <select ref=\"monthSelect\" v-model.number=\"transactionsMonthFilter\">\r\n      <option v-if=\"$props.showAll\" selected value=\"12\">Показать всё</option>\r\n      <option v-for=\"(month, index) in monthsArray\" :key=\"index\" :value=\"index\">{{ month }}</option>\r\n    </select>\r\n    <label>Фильтрация по месяцам</label>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { onMounted, ref } from 'vue';\r\nimport { useTransactionsStore } from '@/stores/transactions';\r\nimport { storeToRefs } from 'pinia';\r\n\r\ndefineProps<{\r\n  showAll: boolean\r\n}>();\r\n\r\nconst { transactionsMonthFilter } = storeToRefs(useTransactionsStore());\r\n\r\nconst monthSelect = ref();\r\nconst monthSelectInstance = ref();\r\n\r\nconst monthsArray: string[] = [ 'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь' ];\r\n\r\nonMounted(() => {\r\n  monthSelectInstance.value = M.FormSelect.init(monthSelect.value);\r\n});\r\n</script>","import script from \"./MonthSelectComponent.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./MonthSelectComponent.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, isRef as _isRef, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { class: \"input-field\" }\nconst _hoisted_2 = [\"value\"]\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Фильтрация по годам\", -1)\n\nimport { computed, ComputedRef, onMounted, ref } from 'vue';\r\nimport { Transaction, useTransactionsStore } from '@/stores/transactions';\r\nimport { storeToRefs } from 'pinia';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'YearSelectComponent',\n  setup(__props) {\n\r\nconst { transactionsSortedByDate, transactionsYearFilter } = storeToRefs(useTransactionsStore());\r\n\r\nconst yearSelect = ref();\r\nconst yearSelectInstance = ref();\r\n\r\nconst yearsSet: ComputedRef<Set<number>> = computed((): Set<number> => {\r\n  const years: Set<number> = new Set();\r\n  years.add(new Date().getFullYear());\r\n  if (!!transactionsSortedByDate.value) {\r\n    transactionsSortedByDate.value.forEach((tr: Transaction) => {\r\n      const trYear: number = new Date(tr.date).getFullYear();\r\n      years.add(trYear);\r\n    });\r\n    const yearsArr: number[] = Array.from(years);\r\n    const maxYear: number = Math.max.apply(null, yearsArr) + 1;\r\n    years.add(maxYear);\r\n    return years;\r\n  } else {\r\n    return years;\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  yearSelectInstance.value = M.FormSelect.init(yearSelect.value);\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _withDirectives(_createElementVNode(\"select\", {\n      ref_key: \"yearSelect\",\n      ref: yearSelect,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(transactionsYearFilter) ? (transactionsYearFilter).value = $event : null))\n    }, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(yearsSet.value, (year) => {\n        return (_openBlock(), _createElementBlock(\"option\", {\n          key: year,\n          value: year\n        }, _toDisplayString(year), 9, _hoisted_2))\n      }), 128))\n    ], 512), [\n      [\n        _vModelSelect,\n        _unref(transactionsYearFilter),\n        void 0,\n        { number: true }\n      ]\n    ]),\n    _hoisted_3\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"input-field\">\r\n    <select ref=\"yearSelect\" v-model.number=\"transactionsYearFilter\">\r\n      <option v-for=\"year in yearsSet\" :key=\"year\" :value=\"year\">{{ year }}</option>\r\n    </select>\r\n    <label>Фильтрация по годам</label>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { computed, ComputedRef, onMounted, ref } from 'vue';\r\nimport { Transaction, useTransactionsStore } from '@/stores/transactions';\r\nimport { storeToRefs } from 'pinia';\r\n\r\nconst { transactionsSortedByDate, transactionsYearFilter } = storeToRefs(useTransactionsStore());\r\n\r\nconst yearSelect = ref();\r\nconst yearSelectInstance = ref();\r\n\r\nconst yearsSet: ComputedRef<Set<number>> = computed((): Set<number> => {\r\n  const years: Set<number> = new Set();\r\n  years.add(new Date().getFullYear());\r\n  if (!!transactionsSortedByDate.value) {\r\n    transactionsSortedByDate.value.forEach((tr: Transaction) => {\r\n      const trYear: number = new Date(tr.date).getFullYear();\r\n      years.add(trYear);\r\n    });\r\n    const yearsArr: number[] = Array.from(years);\r\n    const maxYear: number = Math.max.apply(null, yearsArr) + 1;\r\n    years.add(maxYear);\r\n    return years;\r\n  } else {\r\n    return years;\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  yearSelectInstance.value = M.FormSelect.init(yearSelect.value);\r\n});\r\n</script>","import script from \"./YearSelectComponent.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./YearSelectComponent.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4169d060\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"card-panel grey lighten-2 calendar-list__card day-card\" }\nconst _hoisted_2 = { class: \"day-card__header\" }\nconst _hoisted_3 = { class: \"row valign-wrapper\" }\nconst _hoisted_4 = { class: \"col s12\" }\nconst _hoisted_5 = { class: \"center-align day-card__date\" }\nconst _hoisted_6 = { class: \"row valign-center blue lighten-3\" }\nconst _hoisted_7 = { class: \"col s12\" }\nconst _hoisted_8 = { class: \"center-align day-card__balance\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"valign-center\"\n}\nconst _hoisted_10 = { class: \"col s12 red white-text\" }\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"center-align day-card__overspending\" }, \"Перерасход \", -1))\nconst _hoisted_12 = { class: \"center-align day-card__overspending\" }\nconst _hoisted_13 = { class: \"day-card__section day-card__section-income green lighten-4\" }\nconst _hoisted_14 = { class: \"center-align day-card__income-list-item\" }\nconst _hoisted_15 = { class: \"day-card__section day-card__section-outcome orange lighten-4\" }\nconst _hoisted_16 = { class: \"center-align day-card__income-list-item\" }\nconst _hoisted_17 = { class: \"center-align day-card__income-list\" }\nconst _hoisted_18 = { class: \"day-card__section day-card__section-outcome red lighten-3\" }\nconst _hoisted_19 = { class: \"center-align day-card__income-list-item\" }\nconst _hoisted_20 = { class: \"center-align day-card__income-list\" }\nconst _hoisted_21 = { class: \"day-card__footer\" }\nconst _hoisted_22 = { class: \"valign-center\" }\nconst _hoisted_23 = { class: \"col s12\" }\nconst _hoisted_24 = { class: \"center-align day-card__balance green\" }\n\nimport { useFiltersStore } from '@/stores/filters';\r\nimport { Transaction, useTransactionsStore } from '@/stores/transactions';\r\nimport { NewCategory, useCategoriesStore } from '@/stores/categories';\r\nimport { usePlanningStore } from '@/stores/limits';\r\nimport { useAccountsStore } from '@/stores/accounts';\r\nimport { DayCard } from '@/components/CalendarGridComponent.vue';\r\nimport { computed, ComputedRef } from 'vue';\r\nimport { storeToRefs } from 'pinia';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CalendarDayCardComponent',\n  props: {\n    day: {}\n  },\n  setup(__props: any) {\n\r\nconst props = __props;\r\n\r\nconst { dateFilter, currencyFilter } = useFiltersStore();\r\nconst { transactionsSortedByDate } = storeToRefs(useTransactionsStore());\r\nconst { categoriesAvailableForLimitation } = storeToRefs(useCategoriesStore());\r\nconst { limits } = storeToRefs(usePlanningStore());\r\nconst { accounts } = storeToRefs(useAccountsStore());\r\n\r\nconst todayFilter: number = new Date(props.day.year, props.day.month, props.day.day).getTime();\r\nconst prevMonthLastDate: number = new Date(props.day.year, props.day.month, 0).getDate();\r\nconst prevMonthFilter: number = new Date(props.day.year, props.day.month - 1, prevMonthLastDate).getTime();\r\n\r\nconst balanceTillToday: ComputedRef<number> = computed(() => {\r\n  return accounts.value.map((acc) => {\r\n    const incomeSumTillToday: number = transactionsSortedByDate.value\r\n      .filter((rec) => rec.accountId === acc.id)\r\n      .filter((rec) => rec.type === 'income')\r\n      .filter((rec) => rec.date < todayFilter)\r\n      .reduce((total, record) => Number((total + record.amount).toFixed(2)), 0);\r\n\r\n    const outcomeSumTillToday: number = transactionsSortedByDate.value\r\n      .filter((rec) => rec.accountId === acc.id)\r\n      .filter((rec) => rec.type === 'outcome')\r\n      .filter((rec) => rec.date < todayFilter)\r\n      .reduce((total, record) => Number((total - record.amount).toFixed(2)), 0);\r\n\r\n    const resultSumTillToday: number = acc.initialBalance + incomeSumTillToday + outcomeSumTillToday;\r\n\r\n    return {\r\n      ...acc,\r\n      resultSumTillToday\r\n    };\r\n  })\r\n    .reduce((total, acc) => Number((total + acc.resultSumTillToday).toFixed(2)), 0);\r\n});\r\n\r\nconst balanceAtTheEndOfTheDay: ComputedRef<number> = computed(() => {\r\n  return Number((balanceTillToday.value + allIncomeRecordsSum.value - allOutcomeRecordsSum.value - allNotPlannedRecordsSum.value));\r\n});\r\n\r\n\r\nconst allCategoriesOverspendSumTillToday: ComputedRef<number> = computed(() => {\r\n  return categoriesAvailableForLimitation.value.map((cat) => {\r\n    const spendTillToday: number = transactionsSortedByDate.value\r\n      .filter((tr) => !tr.isNotPlanned)\r\n      .filter((tr) => tr.categoryId === cat.id)\r\n      .filter((tr) => tr.date > prevMonthFilter)\r\n      .filter((tr) => tr.date <= todayFilter)\r\n      .reduce((total, record) => {\r\n        return Number((total + record.amount).toFixed(2));\r\n      }, 0);\r\n\r\n    const limit: number = <number>limits.value.find((lim) => lim.categoryId === cat.id)?.limit;\r\n\r\n    const overspend: number = (spendTillToday - limit) > 0 ? Number((spendTillToday - limit).toFixed(2)) : 0;\r\n\r\n    return {\r\n      ...cat,\r\n      overspend\r\n    };\r\n  })\r\n    .filter((cat) => cat.overspend > 0)\r\n    .reduce((total, cat) => {\r\n      return Number((total + cat.overspend).toFixed(2));\r\n    }, 0);\r\n});\r\n\r\nconst allTodayRecords: ComputedRef<Transaction[]> = computed(() => {\r\n  return transactionsSortedByDate.value\r\n    .filter((tr) => tr.type !== 'transfer')\r\n    .filter((tr) => tr.date === todayFilter);\r\n});\r\n\r\nconst allIncomeRecordsSum: ComputedRef<number> = computed(() => {\r\n  return allTodayRecords.value\r\n    .filter((rec) => rec.type === 'income')\r\n    .reduce((total, record) => {\r\n      return Number((total + record.amount).toFixed(2));\r\n    }, 0);\r\n});\r\n\r\nconst allOutcomeRecords: ComputedRef<Transaction[]> = computed(() => allTodayRecords.value.filter((rec) => rec.type === 'outcome'));\r\n\r\nconst allOutcomeRecordsSum: ComputedRef<number> = computed(() => {\r\n  return allOutcomeRecords.value.reduce((total, record) => {\r\n    return Number((total + record.amount).toFixed(2));\r\n  }, 0);\r\n});\r\n\r\nconst allNotPlannedRecordsSum: ComputedRef<number> = computed(() => {\r\n  return allOutcomeRecords.value\r\n    .filter((tr) => tr.isNotPlanned)\r\n    .reduce((total, record) => {\r\n      return Number((total + record.amount).toFixed(2));\r\n    }, 0);\r\n});\r\n\r\nconst notPlannedRecordsSumTillToday: ComputedRef<number> = computed(() => {\r\n  return transactionsSortedByDate.value\r\n    .filter((tr) => tr.isNotPlanned)\r\n    .filter((tr) => tr.date > prevMonthFilter)\r\n    .filter((tr) => tr.date <= todayFilter)\r\n    .reduce((total, record) => {\r\n      return Number((total + record.amount).toFixed(2));\r\n    }, 0);\r\n});\r\n\r\nconst outcomeCategoriesWithSum: ComputedRef<NewCategory[]> = computed(() => {\r\n  return categoriesAvailableForLimitation.value.map((cat) => {\r\n    const total: number = allTodayRecords.value\r\n      .filter((tr) => !tr.isNotPlanned)\r\n      .filter((tr) => tr.categoryId === cat.id)\r\n      .reduce((total, record) => {\r\n        return Number((total + record.amount).toFixed(2));\r\n      }, 0);\r\n\r\n    return {\r\n      ...cat,\r\n      total\r\n    };\r\n  })\r\n    .filter((cat) => cat.total !== 0);\r\n});\r\n\r\nconst notPlannedCategoriesWithSum: ComputedRef<NewCategory[]> = computed(() => {\r\n  return categoriesAvailableForLimitation.value.map((cat) => {\r\n    const total: number = allTodayRecords.value\r\n      .filter((tr) => tr.isNotPlanned)\r\n      .filter((tr) => tr.categoryId === cat.id)\r\n      .reduce((total, record) => {\r\n        return Number((total + record.amount).toFixed(2));\r\n      }, 0);\r\n\r\n    return {\r\n      ...cat,\r\n      total\r\n    };\r\n  })\r\n    .filter((cat) => cat.total !== 0);\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"article\", _hoisted_1, [\n    _createElementVNode(\"header\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, _toDisplayString(_unref(dateFilter)(_unref(todayFilter))), 1)\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_6, [\n        _createElementVNode(\"div\", _hoisted_7, [\n          _createElementVNode(\"div\", _hoisted_8, \"Утром \" + _toDisplayString(_unref(currencyFilter)(balanceTillToday.value)), 1)\n        ])\n      ]),\n      ((notPlannedRecordsSumTillToday.value + allCategoriesOverspendSumTillToday.value) > 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n            _createElementVNode(\"div\", _hoisted_10, [\n              _hoisted_11,\n              _createElementVNode(\"div\", _hoisted_12, _toDisplayString(_unref(currencyFilter)(notPlannedRecordsSumTillToday.value + allCategoriesOverspendSumTillToday.value)), 1)\n            ])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"section\", _hoisted_13, [\n      _createElementVNode(\"div\", _hoisted_14, [\n        _createElementVNode(\"strong\", null, \"Доход \" + _toDisplayString(_unref(currencyFilter)(allIncomeRecordsSum.value)), 1)\n      ])\n    ]),\n    _createElementVNode(\"section\", _hoisted_15, [\n      _createElementVNode(\"div\", _hoisted_16, [\n        _createElementVNode(\"strong\", null, \"Расход \" + _toDisplayString(_unref(currencyFilter)(allOutcomeRecordsSum.value)), 1)\n      ]),\n      _createElementVNode(\"ul\", _hoisted_17, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(outcomeCategoriesWithSum.value, (cat) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: cat.id,\n            class: \"day-card__income-list-item\"\n          }, _toDisplayString(cat.name) + \" - \" + _toDisplayString(_unref(currencyFilter)(cat['total'])), 1))\n        }), 128))\n      ])\n    ]),\n    _createElementVNode(\"section\", _hoisted_18, [\n      _createElementVNode(\"div\", _hoisted_19, [\n        _createElementVNode(\"strong\", null, \"Вне плана \" + _toDisplayString(_unref(currencyFilter)(allNotPlannedRecordsSum.value)), 1)\n      ]),\n      _createElementVNode(\"ul\", _hoisted_20, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(notPlannedCategoriesWithSum.value, (cat) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: cat.id,\n            class: \"day-card__income-list-item\"\n          }, _toDisplayString(cat.name) + \" - \" + _toDisplayString(_unref(currencyFilter)(cat['total'])), 1))\n        }), 128))\n      ])\n    ]),\n    _createElementVNode(\"footer\", _hoisted_21, [\n      _createElementVNode(\"div\", _hoisted_22, [\n        _createElementVNode(\"div\", _hoisted_23, [\n          _createElementVNode(\"div\", _hoisted_24, \"Вечером \" + _toDisplayString(_unref(currencyFilter)(balanceAtTheEndOfTheDay.value)), 1)\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <article class=\"card-panel grey lighten-2 calendar-list__card day-card\">\r\n    <header class=\"day-card__header\">\r\n      <div class=\"row valign-wrapper\">\r\n        <div class=\"col s12\">\r\n          <div class=\"center-align day-card__date\">{{ dateFilter(todayFilter) }}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row valign-center blue lighten-3\">\r\n        <div class=\"col s12\">\r\n          <div class=\"center-align day-card__balance\">Утром {{ currencyFilter(balanceTillToday) }}</div>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"(notPlannedRecordsSumTillToday + allCategoriesOverspendSumTillToday) > 0\" class=\"valign-center\">\r\n        <div class=\"col s12 red white-text\">\r\n          <div class=\"center-align day-card__overspending\">Перерасход\r\n          </div>\r\n          <div class=\"center-align day-card__overspending\">\r\n            {{ currencyFilter(notPlannedRecordsSumTillToday + allCategoriesOverspendSumTillToday) }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n    <section class=\"day-card__section day-card__section-income green lighten-4\">\r\n      <div class=\"center-align day-card__income-list-item\"><strong>Доход {{\r\n          currencyFilter(allIncomeRecordsSum)\r\n        }}</strong></div>\r\n    </section>\r\n    <section class=\"day-card__section day-card__section-outcome orange lighten-4\">\r\n      <div class=\"center-align day-card__income-list-item\"><strong>Расход {{\r\n          currencyFilter(allOutcomeRecordsSum)\r\n        }}</strong></div>\r\n      <ul class=\"center-align day-card__income-list\">\r\n        <li\r\n          v-for=\"cat in outcomeCategoriesWithSum\"\r\n          :key=\"cat.id\"\r\n          class=\"day-card__income-list-item\">\r\n          {{ cat.name }} - {{ currencyFilter(cat['total']) }}\r\n        </li>\r\n      </ul>\r\n    </section>\r\n    <section class=\"day-card__section day-card__section-outcome red lighten-3\">\r\n      <div class=\"center-align day-card__income-list-item\"><strong>Вне плана {{\r\n          currencyFilter(allNotPlannedRecordsSum)\r\n        }}</strong></div>\r\n      <ul class=\"center-align day-card__income-list\">\r\n        <li\r\n          v-for=\"cat in notPlannedCategoriesWithSum\"\r\n          :key=\"cat.id\"\r\n          class=\"day-card__income-list-item\">\r\n          {{ cat.name }} - {{ currencyFilter(cat['total']) }}\r\n        </li>\r\n      </ul>\r\n    </section>\r\n    <footer class=\"day-card__footer\">\r\n      <div class=\"valign-center\">\r\n        <div class=\"col s12\">\r\n          <div class=\"center-align day-card__balance green\">Вечером {{ currencyFilter(balanceAtTheEndOfTheDay) }}</div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  </article>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { useFiltersStore } from '@/stores/filters';\r\nimport { Transaction, useTransactionsStore } from '@/stores/transactions';\r\nimport { NewCategory, useCategoriesStore } from '@/stores/categories';\r\nimport { usePlanningStore } from '@/stores/limits';\r\nimport { useAccountsStore } from '@/stores/accounts';\r\nimport { DayCard } from '@/components/CalendarGridComponent.vue';\r\nimport { computed, ComputedRef } from 'vue';\r\nimport { storeToRefs } from 'pinia';\r\n\r\nconst props = defineProps<{\r\n  day: DayCard\r\n}>();\r\n\r\nconst { dateFilter, currencyFilter } = useFiltersStore();\r\nconst { transactionsSortedByDate } = storeToRefs(useTransactionsStore());\r\nconst { categoriesAvailableForLimitation } = storeToRefs(useCategoriesStore());\r\nconst { limits } = storeToRefs(usePlanningStore());\r\nconst { accounts } = storeToRefs(useAccountsStore());\r\n\r\nconst todayFilter: number = new Date(props.day.year, props.day.month, props.day.day).getTime();\r\nconst prevMonthLastDate: number = new Date(props.day.year, props.day.month, 0).getDate();\r\nconst prevMonthFilter: number = new Date(props.day.year, props.day.month - 1, prevMonthLastDate).getTime();\r\n\r\nconst balanceTillToday: ComputedRef<number> = computed(() => {\r\n  return accounts.value.map((acc) => {\r\n    const incomeSumTillToday: number = transactionsSortedByDate.value\r\n      .filter((rec) => rec.accountId === acc.id)\r\n      .filter((rec) => rec.type === 'income')\r\n      .filter((rec) => rec.date < todayFilter)\r\n      .reduce((total, record) => Number((total + record.amount).toFixed(2)), 0);\r\n\r\n    const outcomeSumTillToday: number = transactionsSortedByDate.value\r\n      .filter((rec) => rec.accountId === acc.id)\r\n      .filter((rec) => rec.type === 'outcome')\r\n      .filter((rec) => rec.date < todayFilter)\r\n      .reduce((total, record) => Number((total - record.amount).toFixed(2)), 0);\r\n\r\n    const resultSumTillToday: number = acc.initialBalance + incomeSumTillToday + outcomeSumTillToday;\r\n\r\n    return {\r\n      ...acc,\r\n      resultSumTillToday\r\n    };\r\n  })\r\n    .reduce((total, acc) => Number((total + acc.resultSumTillToday).toFixed(2)), 0);\r\n});\r\n\r\nconst balanceAtTheEndOfTheDay: ComputedRef<number> = computed(() => {\r\n  return Number((balanceTillToday.value + allIncomeRecordsSum.value - allOutcomeRecordsSum.value - allNotPlannedRecordsSum.value));\r\n});\r\n\r\n\r\nconst allCategoriesOverspendSumTillToday: ComputedRef<number> = computed(() => {\r\n  return categoriesAvailableForLimitation.value.map((cat) => {\r\n    const spendTillToday: number = transactionsSortedByDate.value\r\n      .filter((tr) => !tr.isNotPlanned)\r\n      .filter((tr) => tr.categoryId === cat.id)\r\n      .filter((tr) => tr.date > prevMonthFilter)\r\n      .filter((tr) => tr.date <= todayFilter)\r\n      .reduce((total, record) => {\r\n        return Number((total + record.amount).toFixed(2));\r\n      }, 0);\r\n\r\n    const limit: number = <number>limits.value.find((lim) => lim.categoryId === cat.id)?.limit;\r\n\r\n    const overspend: number = (spendTillToday - limit) > 0 ? Number((spendTillToday - limit).toFixed(2)) : 0;\r\n\r\n    return {\r\n      ...cat,\r\n      overspend\r\n    };\r\n  })\r\n    .filter((cat) => cat.overspend > 0)\r\n    .reduce((total, cat) => {\r\n      return Number((total + cat.overspend).toFixed(2));\r\n    }, 0);\r\n});\r\n\r\nconst allTodayRecords: ComputedRef<Transaction[]> = computed(() => {\r\n  return transactionsSortedByDate.value\r\n    .filter((tr) => tr.type !== 'transfer')\r\n    .filter((tr) => tr.date === todayFilter);\r\n});\r\n\r\nconst allIncomeRecordsSum: ComputedRef<number> = computed(() => {\r\n  return allTodayRecords.value\r\n    .filter((rec) => rec.type === 'income')\r\n    .reduce((total, record) => {\r\n      return Number((total + record.amount).toFixed(2));\r\n    }, 0);\r\n});\r\n\r\nconst allOutcomeRecords: ComputedRef<Transaction[]> = computed(() => allTodayRecords.value.filter((rec) => rec.type === 'outcome'));\r\n\r\nconst allOutcomeRecordsSum: ComputedRef<number> = computed(() => {\r\n  return allOutcomeRecords.value.reduce((total, record) => {\r\n    return Number((total + record.amount).toFixed(2));\r\n  }, 0);\r\n});\r\n\r\nconst allNotPlannedRecordsSum: ComputedRef<number> = computed(() => {\r\n  return allOutcomeRecords.value\r\n    .filter((tr) => tr.isNotPlanned)\r\n    .reduce((total, record) => {\r\n      return Number((total + record.amount).toFixed(2));\r\n    }, 0);\r\n});\r\n\r\nconst notPlannedRecordsSumTillToday: ComputedRef<number> = computed(() => {\r\n  return transactionsSortedByDate.value\r\n    .filter((tr) => tr.isNotPlanned)\r\n    .filter((tr) => tr.date > prevMonthFilter)\r\n    .filter((tr) => tr.date <= todayFilter)\r\n    .reduce((total, record) => {\r\n      return Number((total + record.amount).toFixed(2));\r\n    }, 0);\r\n});\r\n\r\nconst outcomeCategoriesWithSum: ComputedRef<NewCategory[]> = computed(() => {\r\n  return categoriesAvailableForLimitation.value.map((cat) => {\r\n    const total: number = allTodayRecords.value\r\n      .filter((tr) => !tr.isNotPlanned)\r\n      .filter((tr) => tr.categoryId === cat.id)\r\n      .reduce((total, record) => {\r\n        return Number((total + record.amount).toFixed(2));\r\n      }, 0);\r\n\r\n    return {\r\n      ...cat,\r\n      total\r\n    };\r\n  })\r\n    .filter((cat) => cat.total !== 0);\r\n});\r\n\r\nconst notPlannedCategoriesWithSum: ComputedRef<NewCategory[]> = computed(() => {\r\n  return categoriesAvailableForLimitation.value.map((cat) => {\r\n    const total: number = allTodayRecords.value\r\n      .filter((tr) => tr.isNotPlanned)\r\n      .filter((tr) => tr.categoryId === cat.id)\r\n      .reduce((total, record) => {\r\n        return Number((total + record.amount).toFixed(2));\r\n      }, 0);\r\n\r\n    return {\r\n      ...cat,\r\n      total\r\n    };\r\n  })\r\n    .filter((cat) => cat.total !== 0);\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.day-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n\r\n  &.card-panel {\r\n    margin: 0;\r\n    padding: 20px 10px;\r\n    height: 100%;\r\n  }\r\n\r\n  & .row {\r\n    margin-bottom: 10px;\r\n\r\n    & .col {\r\n      padding: 0;\r\n    }\r\n  }\r\n\r\n  &__header {\r\n    margin-bottom: 20px;\r\n    min-height: 80px;\r\n  }\r\n\r\n  &__date {\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  &__section {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__footer {\r\n    justify-self: flex-end;\r\n    margin-top: auto;\r\n  }\r\n}\r\n</style>","import script from \"./CalendarDayCardComponent.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./CalendarDayCardComponent.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./CalendarDayCardComponent.vue?vue&type=style&index=0&id=4169d060&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4169d060\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-65b83c4e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"calendar-list\" }\n\nimport CalendarDayCardComponent from '@/components/CalendarDayCardComponent.vue';\r\nimport { storeToRefs } from 'pinia';\r\nimport { computed, ComputedRef } from 'vue';\r\nimport { useTransactionsStore } from '@/stores/transactions';\r\n\r\nexport interface DayCard {\r\n  day: number,\r\n  month: number,\r\n  year: number,\r\n  week: number,\r\n  weekday: number,\r\n  weekdayName: string,\r\n  id: number\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CalendarGridComponent',\n  setup(__props) {\n\r\nconst { transactionsMonthFilter, transactionsYearFilter } = storeToRefs(useTransactionsStore());\r\n\r\nconst weekdays: string[] = [ 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa' ];\r\n\r\nconst lastDate: ComputedRef<number> = computed(() => new Date(transactionsYearFilter.value, transactionsMonthFilter.value + 1, 0).getDate());\r\n\r\nconst daysOfMonth: ComputedRef<DayCard[]> = computed(() => {\r\n  const days: DayCard[] = [];\r\n  let weekCounter: number = 1;\r\n  for (let i = 1; i <= lastDate.value; i++) {\r\n    const day: DayCard = { id: 0, week: 0, day: 0, month: 0, weekday: 0, weekdayName: '', year: 0 };\r\n    day.day = i;\r\n    day.month = transactionsMonthFilter.value;\r\n    day.year = transactionsYearFilter.value;\r\n    day.weekday = new Date(transactionsYearFilter.value, transactionsMonthFilter.value, i).getDay();\r\n    day.weekdayName = weekdays[day.weekday];\r\n    day.week = weekCounter;\r\n    day.id = new Date(day.year, day.month, day.day).getTime();\r\n    days.push(day);\r\n    if (day.weekday === 0) weekCounter++;\r\n  }\r\n  return days;\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"ul\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(daysOfMonth.value, (day) => {\n      return (_openBlock(), _createElementBlock(\"li\", {\n        key: day.id,\n        style: _normalizeStyle({ 'grid-area': day.weekdayName, 'grid-row': day.week }),\n        class: \"calendar-list__item\"\n      }, [\n        _createVNode(CalendarDayCardComponent, { day: day }, null, 8, [\"day\"])\n      ], 4))\n    }), 128))\n  ]))\n}\n}\n\n})","<template>\r\n  <ul class=\"calendar-list\">\r\n    <li\r\n      v-for=\"day in daysOfMonth\"\r\n      :key=\"day.id\"\r\n      :style=\"{ 'grid-area': day.weekdayName, 'grid-row': day.week }\"\r\n      class=\"calendar-list__item\">\r\n      <CalendarDayCardComponent :day=\"day\"/>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport CalendarDayCardComponent from '@/components/CalendarDayCardComponent.vue';\r\nimport { storeToRefs } from 'pinia';\r\nimport { computed, ComputedRef } from 'vue';\r\nimport { useTransactionsStore } from '@/stores/transactions';\r\n\r\nconst { transactionsMonthFilter, transactionsYearFilter } = storeToRefs(useTransactionsStore());\r\n\r\nconst weekdays: string[] = [ 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa' ];\r\n\r\nconst lastDate: ComputedRef<number> = computed(() => new Date(transactionsYearFilter.value, transactionsMonthFilter.value + 1, 0).getDate());\r\n\r\nexport interface DayCard {\r\n  day: number,\r\n  month: number,\r\n  year: number,\r\n  week: number,\r\n  weekday: number,\r\n  weekdayName: string,\r\n  id: number\r\n}\r\n\r\nconst daysOfMonth: ComputedRef<DayCard[]> = computed(() => {\r\n  const days: DayCard[] = [];\r\n  let weekCounter: number = 1;\r\n  for (let i = 1; i <= lastDate.value; i++) {\r\n    const day: DayCard = { id: 0, week: 0, day: 0, month: 0, weekday: 0, weekdayName: '', year: 0 };\r\n    day.day = i;\r\n    day.month = transactionsMonthFilter.value;\r\n    day.year = transactionsYearFilter.value;\r\n    day.weekday = new Date(transactionsYearFilter.value, transactionsMonthFilter.value, i).getDay();\r\n    day.weekdayName = weekdays[day.weekday];\r\n    day.week = weekCounter;\r\n    day.id = new Date(day.year, day.month, day.day).getTime();\r\n    days.push(day);\r\n    if (day.weekday === 0) weekCounter++;\r\n  }\r\n  return days;\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.calendar-list {\r\n  display: grid;\r\n  grid-gap: 20px;\r\n  grid-template-areas:\r\n    \"Mo Tu We Th Fr Sa Su\";\r\n  align-items: stretch;\r\n}\r\n</style>","import script from \"./CalendarGridComponent.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./CalendarGridComponent.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./CalendarGridComponent.vue?vue&type=style&index=0&id=65b83c4e&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-65b83c4e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"container\" }, [\n  /*#__PURE__*/_createElementVNode(\"h3\", null, \"Календарь\")\n], -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\nconst _hoisted_3 = { class: \"row\" }\nconst _hoisted_4 = { class: \"col s12 m2 offset-m7\" }\nconst _hoisted_5 = { class: \"col s12 m3\" }\n\nimport CalendarGridComponent from '@/components/CalendarGridComponent.vue';\r\nimport MonthSelectComponent from '@/components/MonthSelectComponent.vue';\r\nimport YearSelectComponent from '@/components/YearSelectComponent.vue';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CalendarView',\n  setup(__props) {\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"div\", _hoisted_4, [\n        _createVNode(YearSelectComponent)\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createVNode(MonthSelectComponent, { \"show-all\": false })\n      ])\n    ]),\n    _createVNode(CalendarGridComponent)\n  ], 64))\n}\n}\n\n})","import script from \"./CalendarView.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./CalendarView.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","key","selected","value","_hoisted_3","_hoisted_4","_createElementVNode","_defineComponent","__name","props","showAll","type","Boolean","setup","__props","transactionsMonthFilter","storeToRefs","useTransactionsStore","monthSelect","ref","monthSelectInstance","monthsArray","onMounted","M","FormSelect","init","_ctx","_cache","_openBlock","_createElementBlock","_withDirectives","ref_key","$event","_isRef","$props","_createCommentVNode","_Fragment","_renderList","month","index","_toDisplayString","_vModelSelect","_unref","number","__exports__","transactionsSortedByDate","transactionsYearFilter","yearSelect","yearSelectInstance","yearsSet","computed","years","Set","add","Date","getFullYear","forEach","tr","trYear","date","yearsArr","Array","from","maxYear","Math","max","apply","year","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","day","dateFilter","currencyFilter","useFiltersStore","categoriesAvailableForLimitation","useCategoriesStore","limits","usePlanningStore","accounts","useAccountsStore","todayFilter","getTime","prevMonthLastDate","getDate","prevMonthFilter","balanceTillToday","map","acc","incomeSumTillToday","filter","rec","accountId","id","reduce","total","record","Number","amount","toFixed","outcomeSumTillToday","resultSumTillToday","initialBalance","balanceAtTheEndOfTheDay","allIncomeRecordsSum","allOutcomeRecordsSum","allNotPlannedRecordsSum","allCategoriesOverspendSumTillToday","cat","spendTillToday","isNotPlanned","categoryId","limit","find","lim","overspend","allTodayRecords","allOutcomeRecords","notPlannedRecordsSumTillToday","outcomeCategoriesWithSum","notPlannedCategoriesWithSum","name","weekdays","lastDate","daysOfMonth","days","weekCounter","i","week","weekday","weekdayName","getDay","push","style","_normalizeStyle","_createVNode","CalendarDayCardComponent","YearSelectComponent","MonthSelectComponent","CalendarGridComponent"],"sourceRoot":""}